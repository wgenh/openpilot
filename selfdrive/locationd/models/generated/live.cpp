#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7641177276838842515) {
   out_7641177276838842515[0] = 0;
   out_7641177276838842515[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7641177276838842515[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7641177276838842515[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7641177276838842515[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7641177276838842515[5] = -sin(in_vec[1]);
   out_7641177276838842515[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7641177276838842515[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7641177276838842515[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7641177276838842515[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7641177276838842515[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7641177276838842515[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7641177276838842515[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7641177276838842515[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7641177276838842515[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7641177276838842515[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7641177276838842515[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7641177276838842515[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2532183155020331779) {
   out_2532183155020331779[0] = delta_x[0] + nom_x[0];
   out_2532183155020331779[1] = delta_x[1] + nom_x[1];
   out_2532183155020331779[2] = delta_x[2] + nom_x[2];
   out_2532183155020331779[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2532183155020331779[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2532183155020331779[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2532183155020331779[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2532183155020331779[7] = delta_x[6] + nom_x[7];
   out_2532183155020331779[8] = delta_x[7] + nom_x[8];
   out_2532183155020331779[9] = delta_x[8] + nom_x[9];
   out_2532183155020331779[10] = delta_x[9] + nom_x[10];
   out_2532183155020331779[11] = delta_x[10] + nom_x[11];
   out_2532183155020331779[12] = delta_x[11] + nom_x[12];
   out_2532183155020331779[13] = delta_x[12] + nom_x[13];
   out_2532183155020331779[14] = delta_x[13] + nom_x[14];
   out_2532183155020331779[15] = delta_x[14] + nom_x[15];
   out_2532183155020331779[16] = delta_x[15] + nom_x[16];
   out_2532183155020331779[17] = delta_x[16] + nom_x[17];
   out_2532183155020331779[18] = delta_x[17] + nom_x[18];
   out_2532183155020331779[19] = delta_x[18] + nom_x[19];
   out_2532183155020331779[20] = delta_x[19] + nom_x[20];
   out_2532183155020331779[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4705040342203024337) {
   out_4705040342203024337[0] = -nom_x[0] + true_x[0];
   out_4705040342203024337[1] = -nom_x[1] + true_x[1];
   out_4705040342203024337[2] = -nom_x[2] + true_x[2];
   out_4705040342203024337[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4705040342203024337[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4705040342203024337[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4705040342203024337[6] = -nom_x[7] + true_x[7];
   out_4705040342203024337[7] = -nom_x[8] + true_x[8];
   out_4705040342203024337[8] = -nom_x[9] + true_x[9];
   out_4705040342203024337[9] = -nom_x[10] + true_x[10];
   out_4705040342203024337[10] = -nom_x[11] + true_x[11];
   out_4705040342203024337[11] = -nom_x[12] + true_x[12];
   out_4705040342203024337[12] = -nom_x[13] + true_x[13];
   out_4705040342203024337[13] = -nom_x[14] + true_x[14];
   out_4705040342203024337[14] = -nom_x[15] + true_x[15];
   out_4705040342203024337[15] = -nom_x[16] + true_x[16];
   out_4705040342203024337[16] = -nom_x[17] + true_x[17];
   out_4705040342203024337[17] = -nom_x[18] + true_x[18];
   out_4705040342203024337[18] = -nom_x[19] + true_x[19];
   out_4705040342203024337[19] = -nom_x[20] + true_x[20];
   out_4705040342203024337[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5358584358519148047) {
   out_5358584358519148047[0] = 1.0;
   out_5358584358519148047[1] = 0;
   out_5358584358519148047[2] = 0;
   out_5358584358519148047[3] = 0;
   out_5358584358519148047[4] = 0;
   out_5358584358519148047[5] = 0;
   out_5358584358519148047[6] = 0;
   out_5358584358519148047[7] = 0;
   out_5358584358519148047[8] = 0;
   out_5358584358519148047[9] = 0;
   out_5358584358519148047[10] = 0;
   out_5358584358519148047[11] = 0;
   out_5358584358519148047[12] = 0;
   out_5358584358519148047[13] = 0;
   out_5358584358519148047[14] = 0;
   out_5358584358519148047[15] = 0;
   out_5358584358519148047[16] = 0;
   out_5358584358519148047[17] = 0;
   out_5358584358519148047[18] = 0;
   out_5358584358519148047[19] = 0;
   out_5358584358519148047[20] = 0;
   out_5358584358519148047[21] = 0;
   out_5358584358519148047[22] = 1.0;
   out_5358584358519148047[23] = 0;
   out_5358584358519148047[24] = 0;
   out_5358584358519148047[25] = 0;
   out_5358584358519148047[26] = 0;
   out_5358584358519148047[27] = 0;
   out_5358584358519148047[28] = 0;
   out_5358584358519148047[29] = 0;
   out_5358584358519148047[30] = 0;
   out_5358584358519148047[31] = 0;
   out_5358584358519148047[32] = 0;
   out_5358584358519148047[33] = 0;
   out_5358584358519148047[34] = 0;
   out_5358584358519148047[35] = 0;
   out_5358584358519148047[36] = 0;
   out_5358584358519148047[37] = 0;
   out_5358584358519148047[38] = 0;
   out_5358584358519148047[39] = 0;
   out_5358584358519148047[40] = 0;
   out_5358584358519148047[41] = 0;
   out_5358584358519148047[42] = 0;
   out_5358584358519148047[43] = 0;
   out_5358584358519148047[44] = 1.0;
   out_5358584358519148047[45] = 0;
   out_5358584358519148047[46] = 0;
   out_5358584358519148047[47] = 0;
   out_5358584358519148047[48] = 0;
   out_5358584358519148047[49] = 0;
   out_5358584358519148047[50] = 0;
   out_5358584358519148047[51] = 0;
   out_5358584358519148047[52] = 0;
   out_5358584358519148047[53] = 0;
   out_5358584358519148047[54] = 0;
   out_5358584358519148047[55] = 0;
   out_5358584358519148047[56] = 0;
   out_5358584358519148047[57] = 0;
   out_5358584358519148047[58] = 0;
   out_5358584358519148047[59] = 0;
   out_5358584358519148047[60] = 0;
   out_5358584358519148047[61] = 0;
   out_5358584358519148047[62] = 0;
   out_5358584358519148047[63] = 0;
   out_5358584358519148047[64] = 0;
   out_5358584358519148047[65] = 0;
   out_5358584358519148047[66] = -0.5*state[4];
   out_5358584358519148047[67] = -0.5*state[5];
   out_5358584358519148047[68] = -0.5*state[6];
   out_5358584358519148047[69] = 0;
   out_5358584358519148047[70] = 0;
   out_5358584358519148047[71] = 0;
   out_5358584358519148047[72] = 0;
   out_5358584358519148047[73] = 0;
   out_5358584358519148047[74] = 0;
   out_5358584358519148047[75] = 0;
   out_5358584358519148047[76] = 0;
   out_5358584358519148047[77] = 0;
   out_5358584358519148047[78] = 0;
   out_5358584358519148047[79] = 0;
   out_5358584358519148047[80] = 0;
   out_5358584358519148047[81] = 0;
   out_5358584358519148047[82] = 0;
   out_5358584358519148047[83] = 0;
   out_5358584358519148047[84] = 0;
   out_5358584358519148047[85] = 0;
   out_5358584358519148047[86] = 0;
   out_5358584358519148047[87] = 0.5*state[3];
   out_5358584358519148047[88] = 0.5*state[6];
   out_5358584358519148047[89] = -0.5*state[5];
   out_5358584358519148047[90] = 0;
   out_5358584358519148047[91] = 0;
   out_5358584358519148047[92] = 0;
   out_5358584358519148047[93] = 0;
   out_5358584358519148047[94] = 0;
   out_5358584358519148047[95] = 0;
   out_5358584358519148047[96] = 0;
   out_5358584358519148047[97] = 0;
   out_5358584358519148047[98] = 0;
   out_5358584358519148047[99] = 0;
   out_5358584358519148047[100] = 0;
   out_5358584358519148047[101] = 0;
   out_5358584358519148047[102] = 0;
   out_5358584358519148047[103] = 0;
   out_5358584358519148047[104] = 0;
   out_5358584358519148047[105] = 0;
   out_5358584358519148047[106] = 0;
   out_5358584358519148047[107] = 0;
   out_5358584358519148047[108] = -0.5*state[6];
   out_5358584358519148047[109] = 0.5*state[3];
   out_5358584358519148047[110] = 0.5*state[4];
   out_5358584358519148047[111] = 0;
   out_5358584358519148047[112] = 0;
   out_5358584358519148047[113] = 0;
   out_5358584358519148047[114] = 0;
   out_5358584358519148047[115] = 0;
   out_5358584358519148047[116] = 0;
   out_5358584358519148047[117] = 0;
   out_5358584358519148047[118] = 0;
   out_5358584358519148047[119] = 0;
   out_5358584358519148047[120] = 0;
   out_5358584358519148047[121] = 0;
   out_5358584358519148047[122] = 0;
   out_5358584358519148047[123] = 0;
   out_5358584358519148047[124] = 0;
   out_5358584358519148047[125] = 0;
   out_5358584358519148047[126] = 0;
   out_5358584358519148047[127] = 0;
   out_5358584358519148047[128] = 0;
   out_5358584358519148047[129] = 0.5*state[5];
   out_5358584358519148047[130] = -0.5*state[4];
   out_5358584358519148047[131] = 0.5*state[3];
   out_5358584358519148047[132] = 0;
   out_5358584358519148047[133] = 0;
   out_5358584358519148047[134] = 0;
   out_5358584358519148047[135] = 0;
   out_5358584358519148047[136] = 0;
   out_5358584358519148047[137] = 0;
   out_5358584358519148047[138] = 0;
   out_5358584358519148047[139] = 0;
   out_5358584358519148047[140] = 0;
   out_5358584358519148047[141] = 0;
   out_5358584358519148047[142] = 0;
   out_5358584358519148047[143] = 0;
   out_5358584358519148047[144] = 0;
   out_5358584358519148047[145] = 0;
   out_5358584358519148047[146] = 0;
   out_5358584358519148047[147] = 0;
   out_5358584358519148047[148] = 0;
   out_5358584358519148047[149] = 0;
   out_5358584358519148047[150] = 0;
   out_5358584358519148047[151] = 0;
   out_5358584358519148047[152] = 0;
   out_5358584358519148047[153] = 1.0;
   out_5358584358519148047[154] = 0;
   out_5358584358519148047[155] = 0;
   out_5358584358519148047[156] = 0;
   out_5358584358519148047[157] = 0;
   out_5358584358519148047[158] = 0;
   out_5358584358519148047[159] = 0;
   out_5358584358519148047[160] = 0;
   out_5358584358519148047[161] = 0;
   out_5358584358519148047[162] = 0;
   out_5358584358519148047[163] = 0;
   out_5358584358519148047[164] = 0;
   out_5358584358519148047[165] = 0;
   out_5358584358519148047[166] = 0;
   out_5358584358519148047[167] = 0;
   out_5358584358519148047[168] = 0;
   out_5358584358519148047[169] = 0;
   out_5358584358519148047[170] = 0;
   out_5358584358519148047[171] = 0;
   out_5358584358519148047[172] = 0;
   out_5358584358519148047[173] = 0;
   out_5358584358519148047[174] = 0;
   out_5358584358519148047[175] = 1.0;
   out_5358584358519148047[176] = 0;
   out_5358584358519148047[177] = 0;
   out_5358584358519148047[178] = 0;
   out_5358584358519148047[179] = 0;
   out_5358584358519148047[180] = 0;
   out_5358584358519148047[181] = 0;
   out_5358584358519148047[182] = 0;
   out_5358584358519148047[183] = 0;
   out_5358584358519148047[184] = 0;
   out_5358584358519148047[185] = 0;
   out_5358584358519148047[186] = 0;
   out_5358584358519148047[187] = 0;
   out_5358584358519148047[188] = 0;
   out_5358584358519148047[189] = 0;
   out_5358584358519148047[190] = 0;
   out_5358584358519148047[191] = 0;
   out_5358584358519148047[192] = 0;
   out_5358584358519148047[193] = 0;
   out_5358584358519148047[194] = 0;
   out_5358584358519148047[195] = 0;
   out_5358584358519148047[196] = 0;
   out_5358584358519148047[197] = 1.0;
   out_5358584358519148047[198] = 0;
   out_5358584358519148047[199] = 0;
   out_5358584358519148047[200] = 0;
   out_5358584358519148047[201] = 0;
   out_5358584358519148047[202] = 0;
   out_5358584358519148047[203] = 0;
   out_5358584358519148047[204] = 0;
   out_5358584358519148047[205] = 0;
   out_5358584358519148047[206] = 0;
   out_5358584358519148047[207] = 0;
   out_5358584358519148047[208] = 0;
   out_5358584358519148047[209] = 0;
   out_5358584358519148047[210] = 0;
   out_5358584358519148047[211] = 0;
   out_5358584358519148047[212] = 0;
   out_5358584358519148047[213] = 0;
   out_5358584358519148047[214] = 0;
   out_5358584358519148047[215] = 0;
   out_5358584358519148047[216] = 0;
   out_5358584358519148047[217] = 0;
   out_5358584358519148047[218] = 0;
   out_5358584358519148047[219] = 1.0;
   out_5358584358519148047[220] = 0;
   out_5358584358519148047[221] = 0;
   out_5358584358519148047[222] = 0;
   out_5358584358519148047[223] = 0;
   out_5358584358519148047[224] = 0;
   out_5358584358519148047[225] = 0;
   out_5358584358519148047[226] = 0;
   out_5358584358519148047[227] = 0;
   out_5358584358519148047[228] = 0;
   out_5358584358519148047[229] = 0;
   out_5358584358519148047[230] = 0;
   out_5358584358519148047[231] = 0;
   out_5358584358519148047[232] = 0;
   out_5358584358519148047[233] = 0;
   out_5358584358519148047[234] = 0;
   out_5358584358519148047[235] = 0;
   out_5358584358519148047[236] = 0;
   out_5358584358519148047[237] = 0;
   out_5358584358519148047[238] = 0;
   out_5358584358519148047[239] = 0;
   out_5358584358519148047[240] = 0;
   out_5358584358519148047[241] = 1.0;
   out_5358584358519148047[242] = 0;
   out_5358584358519148047[243] = 0;
   out_5358584358519148047[244] = 0;
   out_5358584358519148047[245] = 0;
   out_5358584358519148047[246] = 0;
   out_5358584358519148047[247] = 0;
   out_5358584358519148047[248] = 0;
   out_5358584358519148047[249] = 0;
   out_5358584358519148047[250] = 0;
   out_5358584358519148047[251] = 0;
   out_5358584358519148047[252] = 0;
   out_5358584358519148047[253] = 0;
   out_5358584358519148047[254] = 0;
   out_5358584358519148047[255] = 0;
   out_5358584358519148047[256] = 0;
   out_5358584358519148047[257] = 0;
   out_5358584358519148047[258] = 0;
   out_5358584358519148047[259] = 0;
   out_5358584358519148047[260] = 0;
   out_5358584358519148047[261] = 0;
   out_5358584358519148047[262] = 0;
   out_5358584358519148047[263] = 1.0;
   out_5358584358519148047[264] = 0;
   out_5358584358519148047[265] = 0;
   out_5358584358519148047[266] = 0;
   out_5358584358519148047[267] = 0;
   out_5358584358519148047[268] = 0;
   out_5358584358519148047[269] = 0;
   out_5358584358519148047[270] = 0;
   out_5358584358519148047[271] = 0;
   out_5358584358519148047[272] = 0;
   out_5358584358519148047[273] = 0;
   out_5358584358519148047[274] = 0;
   out_5358584358519148047[275] = 0;
   out_5358584358519148047[276] = 0;
   out_5358584358519148047[277] = 0;
   out_5358584358519148047[278] = 0;
   out_5358584358519148047[279] = 0;
   out_5358584358519148047[280] = 0;
   out_5358584358519148047[281] = 0;
   out_5358584358519148047[282] = 0;
   out_5358584358519148047[283] = 0;
   out_5358584358519148047[284] = 0;
   out_5358584358519148047[285] = 1.0;
   out_5358584358519148047[286] = 0;
   out_5358584358519148047[287] = 0;
   out_5358584358519148047[288] = 0;
   out_5358584358519148047[289] = 0;
   out_5358584358519148047[290] = 0;
   out_5358584358519148047[291] = 0;
   out_5358584358519148047[292] = 0;
   out_5358584358519148047[293] = 0;
   out_5358584358519148047[294] = 0;
   out_5358584358519148047[295] = 0;
   out_5358584358519148047[296] = 0;
   out_5358584358519148047[297] = 0;
   out_5358584358519148047[298] = 0;
   out_5358584358519148047[299] = 0;
   out_5358584358519148047[300] = 0;
   out_5358584358519148047[301] = 0;
   out_5358584358519148047[302] = 0;
   out_5358584358519148047[303] = 0;
   out_5358584358519148047[304] = 0;
   out_5358584358519148047[305] = 0;
   out_5358584358519148047[306] = 0;
   out_5358584358519148047[307] = 1.0;
   out_5358584358519148047[308] = 0;
   out_5358584358519148047[309] = 0;
   out_5358584358519148047[310] = 0;
   out_5358584358519148047[311] = 0;
   out_5358584358519148047[312] = 0;
   out_5358584358519148047[313] = 0;
   out_5358584358519148047[314] = 0;
   out_5358584358519148047[315] = 0;
   out_5358584358519148047[316] = 0;
   out_5358584358519148047[317] = 0;
   out_5358584358519148047[318] = 0;
   out_5358584358519148047[319] = 0;
   out_5358584358519148047[320] = 0;
   out_5358584358519148047[321] = 0;
   out_5358584358519148047[322] = 0;
   out_5358584358519148047[323] = 0;
   out_5358584358519148047[324] = 0;
   out_5358584358519148047[325] = 0;
   out_5358584358519148047[326] = 0;
   out_5358584358519148047[327] = 0;
   out_5358584358519148047[328] = 0;
   out_5358584358519148047[329] = 1.0;
   out_5358584358519148047[330] = 0;
   out_5358584358519148047[331] = 0;
   out_5358584358519148047[332] = 0;
   out_5358584358519148047[333] = 0;
   out_5358584358519148047[334] = 0;
   out_5358584358519148047[335] = 0;
   out_5358584358519148047[336] = 0;
   out_5358584358519148047[337] = 0;
   out_5358584358519148047[338] = 0;
   out_5358584358519148047[339] = 0;
   out_5358584358519148047[340] = 0;
   out_5358584358519148047[341] = 0;
   out_5358584358519148047[342] = 0;
   out_5358584358519148047[343] = 0;
   out_5358584358519148047[344] = 0;
   out_5358584358519148047[345] = 0;
   out_5358584358519148047[346] = 0;
   out_5358584358519148047[347] = 0;
   out_5358584358519148047[348] = 0;
   out_5358584358519148047[349] = 0;
   out_5358584358519148047[350] = 0;
   out_5358584358519148047[351] = 1.0;
   out_5358584358519148047[352] = 0;
   out_5358584358519148047[353] = 0;
   out_5358584358519148047[354] = 0;
   out_5358584358519148047[355] = 0;
   out_5358584358519148047[356] = 0;
   out_5358584358519148047[357] = 0;
   out_5358584358519148047[358] = 0;
   out_5358584358519148047[359] = 0;
   out_5358584358519148047[360] = 0;
   out_5358584358519148047[361] = 0;
   out_5358584358519148047[362] = 0;
   out_5358584358519148047[363] = 0;
   out_5358584358519148047[364] = 0;
   out_5358584358519148047[365] = 0;
   out_5358584358519148047[366] = 0;
   out_5358584358519148047[367] = 0;
   out_5358584358519148047[368] = 0;
   out_5358584358519148047[369] = 0;
   out_5358584358519148047[370] = 0;
   out_5358584358519148047[371] = 0;
   out_5358584358519148047[372] = 0;
   out_5358584358519148047[373] = 1.0;
   out_5358584358519148047[374] = 0;
   out_5358584358519148047[375] = 0;
   out_5358584358519148047[376] = 0;
   out_5358584358519148047[377] = 0;
   out_5358584358519148047[378] = 0;
   out_5358584358519148047[379] = 0;
   out_5358584358519148047[380] = 0;
   out_5358584358519148047[381] = 0;
   out_5358584358519148047[382] = 0;
   out_5358584358519148047[383] = 0;
   out_5358584358519148047[384] = 0;
   out_5358584358519148047[385] = 0;
   out_5358584358519148047[386] = 0;
   out_5358584358519148047[387] = 0;
   out_5358584358519148047[388] = 0;
   out_5358584358519148047[389] = 0;
   out_5358584358519148047[390] = 0;
   out_5358584358519148047[391] = 0;
   out_5358584358519148047[392] = 0;
   out_5358584358519148047[393] = 0;
   out_5358584358519148047[394] = 0;
   out_5358584358519148047[395] = 1.0;
   out_5358584358519148047[396] = 0;
   out_5358584358519148047[397] = 0;
   out_5358584358519148047[398] = 0;
   out_5358584358519148047[399] = 0;
   out_5358584358519148047[400] = 0;
   out_5358584358519148047[401] = 0;
   out_5358584358519148047[402] = 0;
   out_5358584358519148047[403] = 0;
   out_5358584358519148047[404] = 0;
   out_5358584358519148047[405] = 0;
   out_5358584358519148047[406] = 0;
   out_5358584358519148047[407] = 0;
   out_5358584358519148047[408] = 0;
   out_5358584358519148047[409] = 0;
   out_5358584358519148047[410] = 0;
   out_5358584358519148047[411] = 0;
   out_5358584358519148047[412] = 0;
   out_5358584358519148047[413] = 0;
   out_5358584358519148047[414] = 0;
   out_5358584358519148047[415] = 0;
   out_5358584358519148047[416] = 0;
   out_5358584358519148047[417] = 1.0;
   out_5358584358519148047[418] = 0;
   out_5358584358519148047[419] = 0;
   out_5358584358519148047[420] = 0;
   out_5358584358519148047[421] = 0;
   out_5358584358519148047[422] = 0;
   out_5358584358519148047[423] = 0;
   out_5358584358519148047[424] = 0;
   out_5358584358519148047[425] = 0;
   out_5358584358519148047[426] = 0;
   out_5358584358519148047[427] = 0;
   out_5358584358519148047[428] = 0;
   out_5358584358519148047[429] = 0;
   out_5358584358519148047[430] = 0;
   out_5358584358519148047[431] = 0;
   out_5358584358519148047[432] = 0;
   out_5358584358519148047[433] = 0;
   out_5358584358519148047[434] = 0;
   out_5358584358519148047[435] = 0;
   out_5358584358519148047[436] = 0;
   out_5358584358519148047[437] = 0;
   out_5358584358519148047[438] = 0;
   out_5358584358519148047[439] = 1.0;
   out_5358584358519148047[440] = 0;
   out_5358584358519148047[441] = 0;
   out_5358584358519148047[442] = 0;
   out_5358584358519148047[443] = 0;
   out_5358584358519148047[444] = 0;
   out_5358584358519148047[445] = 0;
   out_5358584358519148047[446] = 0;
   out_5358584358519148047[447] = 0;
   out_5358584358519148047[448] = 0;
   out_5358584358519148047[449] = 0;
   out_5358584358519148047[450] = 0;
   out_5358584358519148047[451] = 0;
   out_5358584358519148047[452] = 0;
   out_5358584358519148047[453] = 0;
   out_5358584358519148047[454] = 0;
   out_5358584358519148047[455] = 0;
   out_5358584358519148047[456] = 0;
   out_5358584358519148047[457] = 0;
   out_5358584358519148047[458] = 0;
   out_5358584358519148047[459] = 0;
   out_5358584358519148047[460] = 0;
   out_5358584358519148047[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2483488690285755121) {
   out_2483488690285755121[0] = dt*state[7] + state[0];
   out_2483488690285755121[1] = dt*state[8] + state[1];
   out_2483488690285755121[2] = dt*state[9] + state[2];
   out_2483488690285755121[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2483488690285755121[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2483488690285755121[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2483488690285755121[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2483488690285755121[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2483488690285755121[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2483488690285755121[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2483488690285755121[10] = state[10];
   out_2483488690285755121[11] = state[11];
   out_2483488690285755121[12] = state[12];
   out_2483488690285755121[13] = state[13];
   out_2483488690285755121[14] = state[14];
   out_2483488690285755121[15] = state[15];
   out_2483488690285755121[16] = state[16];
   out_2483488690285755121[17] = state[17];
   out_2483488690285755121[18] = state[18];
   out_2483488690285755121[19] = state[19];
   out_2483488690285755121[20] = state[20];
   out_2483488690285755121[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6736351039582247501) {
   out_6736351039582247501[0] = 1;
   out_6736351039582247501[1] = 0;
   out_6736351039582247501[2] = 0;
   out_6736351039582247501[3] = 0;
   out_6736351039582247501[4] = 0;
   out_6736351039582247501[5] = 0;
   out_6736351039582247501[6] = dt;
   out_6736351039582247501[7] = 0;
   out_6736351039582247501[8] = 0;
   out_6736351039582247501[9] = 0;
   out_6736351039582247501[10] = 0;
   out_6736351039582247501[11] = 0;
   out_6736351039582247501[12] = 0;
   out_6736351039582247501[13] = 0;
   out_6736351039582247501[14] = 0;
   out_6736351039582247501[15] = 0;
   out_6736351039582247501[16] = 0;
   out_6736351039582247501[17] = 0;
   out_6736351039582247501[18] = 0;
   out_6736351039582247501[19] = 0;
   out_6736351039582247501[20] = 0;
   out_6736351039582247501[21] = 0;
   out_6736351039582247501[22] = 1;
   out_6736351039582247501[23] = 0;
   out_6736351039582247501[24] = 0;
   out_6736351039582247501[25] = 0;
   out_6736351039582247501[26] = 0;
   out_6736351039582247501[27] = 0;
   out_6736351039582247501[28] = dt;
   out_6736351039582247501[29] = 0;
   out_6736351039582247501[30] = 0;
   out_6736351039582247501[31] = 0;
   out_6736351039582247501[32] = 0;
   out_6736351039582247501[33] = 0;
   out_6736351039582247501[34] = 0;
   out_6736351039582247501[35] = 0;
   out_6736351039582247501[36] = 0;
   out_6736351039582247501[37] = 0;
   out_6736351039582247501[38] = 0;
   out_6736351039582247501[39] = 0;
   out_6736351039582247501[40] = 0;
   out_6736351039582247501[41] = 0;
   out_6736351039582247501[42] = 0;
   out_6736351039582247501[43] = 0;
   out_6736351039582247501[44] = 1;
   out_6736351039582247501[45] = 0;
   out_6736351039582247501[46] = 0;
   out_6736351039582247501[47] = 0;
   out_6736351039582247501[48] = 0;
   out_6736351039582247501[49] = 0;
   out_6736351039582247501[50] = dt;
   out_6736351039582247501[51] = 0;
   out_6736351039582247501[52] = 0;
   out_6736351039582247501[53] = 0;
   out_6736351039582247501[54] = 0;
   out_6736351039582247501[55] = 0;
   out_6736351039582247501[56] = 0;
   out_6736351039582247501[57] = 0;
   out_6736351039582247501[58] = 0;
   out_6736351039582247501[59] = 0;
   out_6736351039582247501[60] = 0;
   out_6736351039582247501[61] = 0;
   out_6736351039582247501[62] = 0;
   out_6736351039582247501[63] = 0;
   out_6736351039582247501[64] = 0;
   out_6736351039582247501[65] = 0;
   out_6736351039582247501[66] = 1;
   out_6736351039582247501[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6736351039582247501[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6736351039582247501[69] = 0;
   out_6736351039582247501[70] = 0;
   out_6736351039582247501[71] = 0;
   out_6736351039582247501[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6736351039582247501[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6736351039582247501[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6736351039582247501[75] = 0;
   out_6736351039582247501[76] = 0;
   out_6736351039582247501[77] = 0;
   out_6736351039582247501[78] = 0;
   out_6736351039582247501[79] = 0;
   out_6736351039582247501[80] = 0;
   out_6736351039582247501[81] = 0;
   out_6736351039582247501[82] = 0;
   out_6736351039582247501[83] = 0;
   out_6736351039582247501[84] = 0;
   out_6736351039582247501[85] = 0;
   out_6736351039582247501[86] = 0;
   out_6736351039582247501[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6736351039582247501[88] = 1;
   out_6736351039582247501[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6736351039582247501[90] = 0;
   out_6736351039582247501[91] = 0;
   out_6736351039582247501[92] = 0;
   out_6736351039582247501[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6736351039582247501[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6736351039582247501[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6736351039582247501[96] = 0;
   out_6736351039582247501[97] = 0;
   out_6736351039582247501[98] = 0;
   out_6736351039582247501[99] = 0;
   out_6736351039582247501[100] = 0;
   out_6736351039582247501[101] = 0;
   out_6736351039582247501[102] = 0;
   out_6736351039582247501[103] = 0;
   out_6736351039582247501[104] = 0;
   out_6736351039582247501[105] = 0;
   out_6736351039582247501[106] = 0;
   out_6736351039582247501[107] = 0;
   out_6736351039582247501[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6736351039582247501[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6736351039582247501[110] = 1;
   out_6736351039582247501[111] = 0;
   out_6736351039582247501[112] = 0;
   out_6736351039582247501[113] = 0;
   out_6736351039582247501[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6736351039582247501[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6736351039582247501[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6736351039582247501[117] = 0;
   out_6736351039582247501[118] = 0;
   out_6736351039582247501[119] = 0;
   out_6736351039582247501[120] = 0;
   out_6736351039582247501[121] = 0;
   out_6736351039582247501[122] = 0;
   out_6736351039582247501[123] = 0;
   out_6736351039582247501[124] = 0;
   out_6736351039582247501[125] = 0;
   out_6736351039582247501[126] = 0;
   out_6736351039582247501[127] = 0;
   out_6736351039582247501[128] = 0;
   out_6736351039582247501[129] = 0;
   out_6736351039582247501[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6736351039582247501[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6736351039582247501[132] = 1;
   out_6736351039582247501[133] = 0;
   out_6736351039582247501[134] = 0;
   out_6736351039582247501[135] = 0;
   out_6736351039582247501[136] = 0;
   out_6736351039582247501[137] = 0;
   out_6736351039582247501[138] = 0;
   out_6736351039582247501[139] = 0;
   out_6736351039582247501[140] = 0;
   out_6736351039582247501[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6736351039582247501[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6736351039582247501[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6736351039582247501[144] = 0;
   out_6736351039582247501[145] = 0;
   out_6736351039582247501[146] = 0;
   out_6736351039582247501[147] = 0;
   out_6736351039582247501[148] = 0;
   out_6736351039582247501[149] = 0;
   out_6736351039582247501[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6736351039582247501[151] = 0;
   out_6736351039582247501[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6736351039582247501[153] = 0;
   out_6736351039582247501[154] = 1;
   out_6736351039582247501[155] = 0;
   out_6736351039582247501[156] = 0;
   out_6736351039582247501[157] = 0;
   out_6736351039582247501[158] = 0;
   out_6736351039582247501[159] = 0;
   out_6736351039582247501[160] = 0;
   out_6736351039582247501[161] = 0;
   out_6736351039582247501[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6736351039582247501[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6736351039582247501[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6736351039582247501[165] = 0;
   out_6736351039582247501[166] = 0;
   out_6736351039582247501[167] = 0;
   out_6736351039582247501[168] = 0;
   out_6736351039582247501[169] = 0;
   out_6736351039582247501[170] = 0;
   out_6736351039582247501[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6736351039582247501[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6736351039582247501[173] = 0;
   out_6736351039582247501[174] = 0;
   out_6736351039582247501[175] = 0;
   out_6736351039582247501[176] = 1;
   out_6736351039582247501[177] = 0;
   out_6736351039582247501[178] = 0;
   out_6736351039582247501[179] = 0;
   out_6736351039582247501[180] = 0;
   out_6736351039582247501[181] = 0;
   out_6736351039582247501[182] = 0;
   out_6736351039582247501[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6736351039582247501[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6736351039582247501[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6736351039582247501[186] = 0;
   out_6736351039582247501[187] = 0;
   out_6736351039582247501[188] = 0;
   out_6736351039582247501[189] = 0;
   out_6736351039582247501[190] = 0;
   out_6736351039582247501[191] = 0;
   out_6736351039582247501[192] = 0;
   out_6736351039582247501[193] = 0;
   out_6736351039582247501[194] = 0;
   out_6736351039582247501[195] = 0;
   out_6736351039582247501[196] = 0;
   out_6736351039582247501[197] = 0;
   out_6736351039582247501[198] = 1;
   out_6736351039582247501[199] = 0;
   out_6736351039582247501[200] = 0;
   out_6736351039582247501[201] = 0;
   out_6736351039582247501[202] = 0;
   out_6736351039582247501[203] = 0;
   out_6736351039582247501[204] = 0;
   out_6736351039582247501[205] = 0;
   out_6736351039582247501[206] = 0;
   out_6736351039582247501[207] = 0;
   out_6736351039582247501[208] = 0;
   out_6736351039582247501[209] = 0;
   out_6736351039582247501[210] = 0;
   out_6736351039582247501[211] = 0;
   out_6736351039582247501[212] = 0;
   out_6736351039582247501[213] = 0;
   out_6736351039582247501[214] = 0;
   out_6736351039582247501[215] = 0;
   out_6736351039582247501[216] = 0;
   out_6736351039582247501[217] = 0;
   out_6736351039582247501[218] = 0;
   out_6736351039582247501[219] = 0;
   out_6736351039582247501[220] = 1;
   out_6736351039582247501[221] = 0;
   out_6736351039582247501[222] = 0;
   out_6736351039582247501[223] = 0;
   out_6736351039582247501[224] = 0;
   out_6736351039582247501[225] = 0;
   out_6736351039582247501[226] = 0;
   out_6736351039582247501[227] = 0;
   out_6736351039582247501[228] = 0;
   out_6736351039582247501[229] = 0;
   out_6736351039582247501[230] = 0;
   out_6736351039582247501[231] = 0;
   out_6736351039582247501[232] = 0;
   out_6736351039582247501[233] = 0;
   out_6736351039582247501[234] = 0;
   out_6736351039582247501[235] = 0;
   out_6736351039582247501[236] = 0;
   out_6736351039582247501[237] = 0;
   out_6736351039582247501[238] = 0;
   out_6736351039582247501[239] = 0;
   out_6736351039582247501[240] = 0;
   out_6736351039582247501[241] = 0;
   out_6736351039582247501[242] = 1;
   out_6736351039582247501[243] = 0;
   out_6736351039582247501[244] = 0;
   out_6736351039582247501[245] = 0;
   out_6736351039582247501[246] = 0;
   out_6736351039582247501[247] = 0;
   out_6736351039582247501[248] = 0;
   out_6736351039582247501[249] = 0;
   out_6736351039582247501[250] = 0;
   out_6736351039582247501[251] = 0;
   out_6736351039582247501[252] = 0;
   out_6736351039582247501[253] = 0;
   out_6736351039582247501[254] = 0;
   out_6736351039582247501[255] = 0;
   out_6736351039582247501[256] = 0;
   out_6736351039582247501[257] = 0;
   out_6736351039582247501[258] = 0;
   out_6736351039582247501[259] = 0;
   out_6736351039582247501[260] = 0;
   out_6736351039582247501[261] = 0;
   out_6736351039582247501[262] = 0;
   out_6736351039582247501[263] = 0;
   out_6736351039582247501[264] = 1;
   out_6736351039582247501[265] = 0;
   out_6736351039582247501[266] = 0;
   out_6736351039582247501[267] = 0;
   out_6736351039582247501[268] = 0;
   out_6736351039582247501[269] = 0;
   out_6736351039582247501[270] = 0;
   out_6736351039582247501[271] = 0;
   out_6736351039582247501[272] = 0;
   out_6736351039582247501[273] = 0;
   out_6736351039582247501[274] = 0;
   out_6736351039582247501[275] = 0;
   out_6736351039582247501[276] = 0;
   out_6736351039582247501[277] = 0;
   out_6736351039582247501[278] = 0;
   out_6736351039582247501[279] = 0;
   out_6736351039582247501[280] = 0;
   out_6736351039582247501[281] = 0;
   out_6736351039582247501[282] = 0;
   out_6736351039582247501[283] = 0;
   out_6736351039582247501[284] = 0;
   out_6736351039582247501[285] = 0;
   out_6736351039582247501[286] = 1;
   out_6736351039582247501[287] = 0;
   out_6736351039582247501[288] = 0;
   out_6736351039582247501[289] = 0;
   out_6736351039582247501[290] = 0;
   out_6736351039582247501[291] = 0;
   out_6736351039582247501[292] = 0;
   out_6736351039582247501[293] = 0;
   out_6736351039582247501[294] = 0;
   out_6736351039582247501[295] = 0;
   out_6736351039582247501[296] = 0;
   out_6736351039582247501[297] = 0;
   out_6736351039582247501[298] = 0;
   out_6736351039582247501[299] = 0;
   out_6736351039582247501[300] = 0;
   out_6736351039582247501[301] = 0;
   out_6736351039582247501[302] = 0;
   out_6736351039582247501[303] = 0;
   out_6736351039582247501[304] = 0;
   out_6736351039582247501[305] = 0;
   out_6736351039582247501[306] = 0;
   out_6736351039582247501[307] = 0;
   out_6736351039582247501[308] = 1;
   out_6736351039582247501[309] = 0;
   out_6736351039582247501[310] = 0;
   out_6736351039582247501[311] = 0;
   out_6736351039582247501[312] = 0;
   out_6736351039582247501[313] = 0;
   out_6736351039582247501[314] = 0;
   out_6736351039582247501[315] = 0;
   out_6736351039582247501[316] = 0;
   out_6736351039582247501[317] = 0;
   out_6736351039582247501[318] = 0;
   out_6736351039582247501[319] = 0;
   out_6736351039582247501[320] = 0;
   out_6736351039582247501[321] = 0;
   out_6736351039582247501[322] = 0;
   out_6736351039582247501[323] = 0;
   out_6736351039582247501[324] = 0;
   out_6736351039582247501[325] = 0;
   out_6736351039582247501[326] = 0;
   out_6736351039582247501[327] = 0;
   out_6736351039582247501[328] = 0;
   out_6736351039582247501[329] = 0;
   out_6736351039582247501[330] = 1;
   out_6736351039582247501[331] = 0;
   out_6736351039582247501[332] = 0;
   out_6736351039582247501[333] = 0;
   out_6736351039582247501[334] = 0;
   out_6736351039582247501[335] = 0;
   out_6736351039582247501[336] = 0;
   out_6736351039582247501[337] = 0;
   out_6736351039582247501[338] = 0;
   out_6736351039582247501[339] = 0;
   out_6736351039582247501[340] = 0;
   out_6736351039582247501[341] = 0;
   out_6736351039582247501[342] = 0;
   out_6736351039582247501[343] = 0;
   out_6736351039582247501[344] = 0;
   out_6736351039582247501[345] = 0;
   out_6736351039582247501[346] = 0;
   out_6736351039582247501[347] = 0;
   out_6736351039582247501[348] = 0;
   out_6736351039582247501[349] = 0;
   out_6736351039582247501[350] = 0;
   out_6736351039582247501[351] = 0;
   out_6736351039582247501[352] = 1;
   out_6736351039582247501[353] = 0;
   out_6736351039582247501[354] = 0;
   out_6736351039582247501[355] = 0;
   out_6736351039582247501[356] = 0;
   out_6736351039582247501[357] = 0;
   out_6736351039582247501[358] = 0;
   out_6736351039582247501[359] = 0;
   out_6736351039582247501[360] = 0;
   out_6736351039582247501[361] = 0;
   out_6736351039582247501[362] = 0;
   out_6736351039582247501[363] = 0;
   out_6736351039582247501[364] = 0;
   out_6736351039582247501[365] = 0;
   out_6736351039582247501[366] = 0;
   out_6736351039582247501[367] = 0;
   out_6736351039582247501[368] = 0;
   out_6736351039582247501[369] = 0;
   out_6736351039582247501[370] = 0;
   out_6736351039582247501[371] = 0;
   out_6736351039582247501[372] = 0;
   out_6736351039582247501[373] = 0;
   out_6736351039582247501[374] = 1;
   out_6736351039582247501[375] = 0;
   out_6736351039582247501[376] = 0;
   out_6736351039582247501[377] = 0;
   out_6736351039582247501[378] = 0;
   out_6736351039582247501[379] = 0;
   out_6736351039582247501[380] = 0;
   out_6736351039582247501[381] = 0;
   out_6736351039582247501[382] = 0;
   out_6736351039582247501[383] = 0;
   out_6736351039582247501[384] = 0;
   out_6736351039582247501[385] = 0;
   out_6736351039582247501[386] = 0;
   out_6736351039582247501[387] = 0;
   out_6736351039582247501[388] = 0;
   out_6736351039582247501[389] = 0;
   out_6736351039582247501[390] = 0;
   out_6736351039582247501[391] = 0;
   out_6736351039582247501[392] = 0;
   out_6736351039582247501[393] = 0;
   out_6736351039582247501[394] = 0;
   out_6736351039582247501[395] = 0;
   out_6736351039582247501[396] = 1;
   out_6736351039582247501[397] = 0;
   out_6736351039582247501[398] = 0;
   out_6736351039582247501[399] = 0;
   out_6736351039582247501[400] = 0;
   out_6736351039582247501[401] = 0;
   out_6736351039582247501[402] = 0;
   out_6736351039582247501[403] = 0;
   out_6736351039582247501[404] = 0;
   out_6736351039582247501[405] = 0;
   out_6736351039582247501[406] = 0;
   out_6736351039582247501[407] = 0;
   out_6736351039582247501[408] = 0;
   out_6736351039582247501[409] = 0;
   out_6736351039582247501[410] = 0;
   out_6736351039582247501[411] = 0;
   out_6736351039582247501[412] = 0;
   out_6736351039582247501[413] = 0;
   out_6736351039582247501[414] = 0;
   out_6736351039582247501[415] = 0;
   out_6736351039582247501[416] = 0;
   out_6736351039582247501[417] = 0;
   out_6736351039582247501[418] = 1;
   out_6736351039582247501[419] = 0;
   out_6736351039582247501[420] = 0;
   out_6736351039582247501[421] = 0;
   out_6736351039582247501[422] = 0;
   out_6736351039582247501[423] = 0;
   out_6736351039582247501[424] = 0;
   out_6736351039582247501[425] = 0;
   out_6736351039582247501[426] = 0;
   out_6736351039582247501[427] = 0;
   out_6736351039582247501[428] = 0;
   out_6736351039582247501[429] = 0;
   out_6736351039582247501[430] = 0;
   out_6736351039582247501[431] = 0;
   out_6736351039582247501[432] = 0;
   out_6736351039582247501[433] = 0;
   out_6736351039582247501[434] = 0;
   out_6736351039582247501[435] = 0;
   out_6736351039582247501[436] = 0;
   out_6736351039582247501[437] = 0;
   out_6736351039582247501[438] = 0;
   out_6736351039582247501[439] = 0;
   out_6736351039582247501[440] = 1;
}
void h_4(double *state, double *unused, double *out_2376661880563825318) {
   out_2376661880563825318[0] = state[10] + state[13];
   out_2376661880563825318[1] = state[11] + state[14];
   out_2376661880563825318[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6207540533751071916) {
   out_6207540533751071916[0] = 0;
   out_6207540533751071916[1] = 0;
   out_6207540533751071916[2] = 0;
   out_6207540533751071916[3] = 0;
   out_6207540533751071916[4] = 0;
   out_6207540533751071916[5] = 0;
   out_6207540533751071916[6] = 0;
   out_6207540533751071916[7] = 0;
   out_6207540533751071916[8] = 0;
   out_6207540533751071916[9] = 0;
   out_6207540533751071916[10] = 1;
   out_6207540533751071916[11] = 0;
   out_6207540533751071916[12] = 0;
   out_6207540533751071916[13] = 1;
   out_6207540533751071916[14] = 0;
   out_6207540533751071916[15] = 0;
   out_6207540533751071916[16] = 0;
   out_6207540533751071916[17] = 0;
   out_6207540533751071916[18] = 0;
   out_6207540533751071916[19] = 0;
   out_6207540533751071916[20] = 0;
   out_6207540533751071916[21] = 0;
   out_6207540533751071916[22] = 0;
   out_6207540533751071916[23] = 0;
   out_6207540533751071916[24] = 0;
   out_6207540533751071916[25] = 0;
   out_6207540533751071916[26] = 0;
   out_6207540533751071916[27] = 0;
   out_6207540533751071916[28] = 0;
   out_6207540533751071916[29] = 0;
   out_6207540533751071916[30] = 0;
   out_6207540533751071916[31] = 0;
   out_6207540533751071916[32] = 0;
   out_6207540533751071916[33] = 1;
   out_6207540533751071916[34] = 0;
   out_6207540533751071916[35] = 0;
   out_6207540533751071916[36] = 1;
   out_6207540533751071916[37] = 0;
   out_6207540533751071916[38] = 0;
   out_6207540533751071916[39] = 0;
   out_6207540533751071916[40] = 0;
   out_6207540533751071916[41] = 0;
   out_6207540533751071916[42] = 0;
   out_6207540533751071916[43] = 0;
   out_6207540533751071916[44] = 0;
   out_6207540533751071916[45] = 0;
   out_6207540533751071916[46] = 0;
   out_6207540533751071916[47] = 0;
   out_6207540533751071916[48] = 0;
   out_6207540533751071916[49] = 0;
   out_6207540533751071916[50] = 0;
   out_6207540533751071916[51] = 0;
   out_6207540533751071916[52] = 0;
   out_6207540533751071916[53] = 0;
   out_6207540533751071916[54] = 0;
   out_6207540533751071916[55] = 0;
   out_6207540533751071916[56] = 1;
   out_6207540533751071916[57] = 0;
   out_6207540533751071916[58] = 0;
   out_6207540533751071916[59] = 1;
   out_6207540533751071916[60] = 0;
   out_6207540533751071916[61] = 0;
   out_6207540533751071916[62] = 0;
   out_6207540533751071916[63] = 0;
   out_6207540533751071916[64] = 0;
   out_6207540533751071916[65] = 0;
}
void h_9(double *state, double *unused, double *out_2065860645518724890) {
   out_2065860645518724890[0] = state[10];
   out_2065860645518724890[1] = state[11];
   out_2065860645518724890[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1079678401513375554) {
   out_1079678401513375554[0] = 0;
   out_1079678401513375554[1] = 0;
   out_1079678401513375554[2] = 0;
   out_1079678401513375554[3] = 0;
   out_1079678401513375554[4] = 0;
   out_1079678401513375554[5] = 0;
   out_1079678401513375554[6] = 0;
   out_1079678401513375554[7] = 0;
   out_1079678401513375554[8] = 0;
   out_1079678401513375554[9] = 0;
   out_1079678401513375554[10] = 1;
   out_1079678401513375554[11] = 0;
   out_1079678401513375554[12] = 0;
   out_1079678401513375554[13] = 0;
   out_1079678401513375554[14] = 0;
   out_1079678401513375554[15] = 0;
   out_1079678401513375554[16] = 0;
   out_1079678401513375554[17] = 0;
   out_1079678401513375554[18] = 0;
   out_1079678401513375554[19] = 0;
   out_1079678401513375554[20] = 0;
   out_1079678401513375554[21] = 0;
   out_1079678401513375554[22] = 0;
   out_1079678401513375554[23] = 0;
   out_1079678401513375554[24] = 0;
   out_1079678401513375554[25] = 0;
   out_1079678401513375554[26] = 0;
   out_1079678401513375554[27] = 0;
   out_1079678401513375554[28] = 0;
   out_1079678401513375554[29] = 0;
   out_1079678401513375554[30] = 0;
   out_1079678401513375554[31] = 0;
   out_1079678401513375554[32] = 0;
   out_1079678401513375554[33] = 1;
   out_1079678401513375554[34] = 0;
   out_1079678401513375554[35] = 0;
   out_1079678401513375554[36] = 0;
   out_1079678401513375554[37] = 0;
   out_1079678401513375554[38] = 0;
   out_1079678401513375554[39] = 0;
   out_1079678401513375554[40] = 0;
   out_1079678401513375554[41] = 0;
   out_1079678401513375554[42] = 0;
   out_1079678401513375554[43] = 0;
   out_1079678401513375554[44] = 0;
   out_1079678401513375554[45] = 0;
   out_1079678401513375554[46] = 0;
   out_1079678401513375554[47] = 0;
   out_1079678401513375554[48] = 0;
   out_1079678401513375554[49] = 0;
   out_1079678401513375554[50] = 0;
   out_1079678401513375554[51] = 0;
   out_1079678401513375554[52] = 0;
   out_1079678401513375554[53] = 0;
   out_1079678401513375554[54] = 0;
   out_1079678401513375554[55] = 0;
   out_1079678401513375554[56] = 1;
   out_1079678401513375554[57] = 0;
   out_1079678401513375554[58] = 0;
   out_1079678401513375554[59] = 0;
   out_1079678401513375554[60] = 0;
   out_1079678401513375554[61] = 0;
   out_1079678401513375554[62] = 0;
   out_1079678401513375554[63] = 0;
   out_1079678401513375554[64] = 0;
   out_1079678401513375554[65] = 0;
}
void h_10(double *state, double *unused, double *out_6788541366407009480) {
   out_6788541366407009480[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6788541366407009480[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6788541366407009480[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4717283011623182729) {
   out_4717283011623182729[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4717283011623182729[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4717283011623182729[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4717283011623182729[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4717283011623182729[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4717283011623182729[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4717283011623182729[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4717283011623182729[7] = 0;
   out_4717283011623182729[8] = 0;
   out_4717283011623182729[9] = 0;
   out_4717283011623182729[10] = 0;
   out_4717283011623182729[11] = 0;
   out_4717283011623182729[12] = 0;
   out_4717283011623182729[13] = 0;
   out_4717283011623182729[14] = 0;
   out_4717283011623182729[15] = 0;
   out_4717283011623182729[16] = 1;
   out_4717283011623182729[17] = 0;
   out_4717283011623182729[18] = 0;
   out_4717283011623182729[19] = 1;
   out_4717283011623182729[20] = 0;
   out_4717283011623182729[21] = 0;
   out_4717283011623182729[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4717283011623182729[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4717283011623182729[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4717283011623182729[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4717283011623182729[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4717283011623182729[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4717283011623182729[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4717283011623182729[29] = 0;
   out_4717283011623182729[30] = 0;
   out_4717283011623182729[31] = 0;
   out_4717283011623182729[32] = 0;
   out_4717283011623182729[33] = 0;
   out_4717283011623182729[34] = 0;
   out_4717283011623182729[35] = 0;
   out_4717283011623182729[36] = 0;
   out_4717283011623182729[37] = 0;
   out_4717283011623182729[38] = 0;
   out_4717283011623182729[39] = 1;
   out_4717283011623182729[40] = 0;
   out_4717283011623182729[41] = 0;
   out_4717283011623182729[42] = 1;
   out_4717283011623182729[43] = 0;
   out_4717283011623182729[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4717283011623182729[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4717283011623182729[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4717283011623182729[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4717283011623182729[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4717283011623182729[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4717283011623182729[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4717283011623182729[51] = 0;
   out_4717283011623182729[52] = 0;
   out_4717283011623182729[53] = 0;
   out_4717283011623182729[54] = 0;
   out_4717283011623182729[55] = 0;
   out_4717283011623182729[56] = 0;
   out_4717283011623182729[57] = 0;
   out_4717283011623182729[58] = 0;
   out_4717283011623182729[59] = 0;
   out_4717283011623182729[60] = 0;
   out_4717283011623182729[61] = 0;
   out_4717283011623182729[62] = 1;
   out_4717283011623182729[63] = 0;
   out_4717283011623182729[64] = 0;
   out_4717283011623182729[65] = 1;
}
void h_12(double *state, double *unused, double *out_2109637504871451338) {
   out_2109637504871451338[0] = state[0];
   out_2109637504871451338[1] = state[1];
   out_2109637504871451338[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1188084125719110121) {
   out_1188084125719110121[0] = 1;
   out_1188084125719110121[1] = 0;
   out_1188084125719110121[2] = 0;
   out_1188084125719110121[3] = 0;
   out_1188084125719110121[4] = 0;
   out_1188084125719110121[5] = 0;
   out_1188084125719110121[6] = 0;
   out_1188084125719110121[7] = 0;
   out_1188084125719110121[8] = 0;
   out_1188084125719110121[9] = 0;
   out_1188084125719110121[10] = 0;
   out_1188084125719110121[11] = 0;
   out_1188084125719110121[12] = 0;
   out_1188084125719110121[13] = 0;
   out_1188084125719110121[14] = 0;
   out_1188084125719110121[15] = 0;
   out_1188084125719110121[16] = 0;
   out_1188084125719110121[17] = 0;
   out_1188084125719110121[18] = 0;
   out_1188084125719110121[19] = 0;
   out_1188084125719110121[20] = 0;
   out_1188084125719110121[21] = 0;
   out_1188084125719110121[22] = 0;
   out_1188084125719110121[23] = 1;
   out_1188084125719110121[24] = 0;
   out_1188084125719110121[25] = 0;
   out_1188084125719110121[26] = 0;
   out_1188084125719110121[27] = 0;
   out_1188084125719110121[28] = 0;
   out_1188084125719110121[29] = 0;
   out_1188084125719110121[30] = 0;
   out_1188084125719110121[31] = 0;
   out_1188084125719110121[32] = 0;
   out_1188084125719110121[33] = 0;
   out_1188084125719110121[34] = 0;
   out_1188084125719110121[35] = 0;
   out_1188084125719110121[36] = 0;
   out_1188084125719110121[37] = 0;
   out_1188084125719110121[38] = 0;
   out_1188084125719110121[39] = 0;
   out_1188084125719110121[40] = 0;
   out_1188084125719110121[41] = 0;
   out_1188084125719110121[42] = 0;
   out_1188084125719110121[43] = 0;
   out_1188084125719110121[44] = 0;
   out_1188084125719110121[45] = 0;
   out_1188084125719110121[46] = 1;
   out_1188084125719110121[47] = 0;
   out_1188084125719110121[48] = 0;
   out_1188084125719110121[49] = 0;
   out_1188084125719110121[50] = 0;
   out_1188084125719110121[51] = 0;
   out_1188084125719110121[52] = 0;
   out_1188084125719110121[53] = 0;
   out_1188084125719110121[54] = 0;
   out_1188084125719110121[55] = 0;
   out_1188084125719110121[56] = 0;
   out_1188084125719110121[57] = 0;
   out_1188084125719110121[58] = 0;
   out_1188084125719110121[59] = 0;
   out_1188084125719110121[60] = 0;
   out_1188084125719110121[61] = 0;
   out_1188084125719110121[62] = 0;
   out_1188084125719110121[63] = 0;
   out_1188084125719110121[64] = 0;
   out_1188084125719110121[65] = 0;
}
void h_35(double *state, double *unused, double *out_5362197287562187074) {
   out_5362197287562187074[0] = state[7];
   out_5362197287562187074[1] = state[8];
   out_5362197287562187074[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2840878476378464540) {
   out_2840878476378464540[0] = 0;
   out_2840878476378464540[1] = 0;
   out_2840878476378464540[2] = 0;
   out_2840878476378464540[3] = 0;
   out_2840878476378464540[4] = 0;
   out_2840878476378464540[5] = 0;
   out_2840878476378464540[6] = 0;
   out_2840878476378464540[7] = 1;
   out_2840878476378464540[8] = 0;
   out_2840878476378464540[9] = 0;
   out_2840878476378464540[10] = 0;
   out_2840878476378464540[11] = 0;
   out_2840878476378464540[12] = 0;
   out_2840878476378464540[13] = 0;
   out_2840878476378464540[14] = 0;
   out_2840878476378464540[15] = 0;
   out_2840878476378464540[16] = 0;
   out_2840878476378464540[17] = 0;
   out_2840878476378464540[18] = 0;
   out_2840878476378464540[19] = 0;
   out_2840878476378464540[20] = 0;
   out_2840878476378464540[21] = 0;
   out_2840878476378464540[22] = 0;
   out_2840878476378464540[23] = 0;
   out_2840878476378464540[24] = 0;
   out_2840878476378464540[25] = 0;
   out_2840878476378464540[26] = 0;
   out_2840878476378464540[27] = 0;
   out_2840878476378464540[28] = 0;
   out_2840878476378464540[29] = 0;
   out_2840878476378464540[30] = 1;
   out_2840878476378464540[31] = 0;
   out_2840878476378464540[32] = 0;
   out_2840878476378464540[33] = 0;
   out_2840878476378464540[34] = 0;
   out_2840878476378464540[35] = 0;
   out_2840878476378464540[36] = 0;
   out_2840878476378464540[37] = 0;
   out_2840878476378464540[38] = 0;
   out_2840878476378464540[39] = 0;
   out_2840878476378464540[40] = 0;
   out_2840878476378464540[41] = 0;
   out_2840878476378464540[42] = 0;
   out_2840878476378464540[43] = 0;
   out_2840878476378464540[44] = 0;
   out_2840878476378464540[45] = 0;
   out_2840878476378464540[46] = 0;
   out_2840878476378464540[47] = 0;
   out_2840878476378464540[48] = 0;
   out_2840878476378464540[49] = 0;
   out_2840878476378464540[50] = 0;
   out_2840878476378464540[51] = 0;
   out_2840878476378464540[52] = 0;
   out_2840878476378464540[53] = 1;
   out_2840878476378464540[54] = 0;
   out_2840878476378464540[55] = 0;
   out_2840878476378464540[56] = 0;
   out_2840878476378464540[57] = 0;
   out_2840878476378464540[58] = 0;
   out_2840878476378464540[59] = 0;
   out_2840878476378464540[60] = 0;
   out_2840878476378464540[61] = 0;
   out_2840878476378464540[62] = 0;
   out_2840878476378464540[63] = 0;
   out_2840878476378464540[64] = 0;
   out_2840878476378464540[65] = 0;
}
void h_32(double *state, double *unused, double *out_3168274671828253638) {
   out_3168274671828253638[0] = state[3];
   out_3168274671828253638[1] = state[4];
   out_3168274671828253638[2] = state[5];
   out_3168274671828253638[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8440288889245546773) {
   out_8440288889245546773[0] = 0;
   out_8440288889245546773[1] = 0;
   out_8440288889245546773[2] = 0;
   out_8440288889245546773[3] = 1;
   out_8440288889245546773[4] = 0;
   out_8440288889245546773[5] = 0;
   out_8440288889245546773[6] = 0;
   out_8440288889245546773[7] = 0;
   out_8440288889245546773[8] = 0;
   out_8440288889245546773[9] = 0;
   out_8440288889245546773[10] = 0;
   out_8440288889245546773[11] = 0;
   out_8440288889245546773[12] = 0;
   out_8440288889245546773[13] = 0;
   out_8440288889245546773[14] = 0;
   out_8440288889245546773[15] = 0;
   out_8440288889245546773[16] = 0;
   out_8440288889245546773[17] = 0;
   out_8440288889245546773[18] = 0;
   out_8440288889245546773[19] = 0;
   out_8440288889245546773[20] = 0;
   out_8440288889245546773[21] = 0;
   out_8440288889245546773[22] = 0;
   out_8440288889245546773[23] = 0;
   out_8440288889245546773[24] = 0;
   out_8440288889245546773[25] = 0;
   out_8440288889245546773[26] = 1;
   out_8440288889245546773[27] = 0;
   out_8440288889245546773[28] = 0;
   out_8440288889245546773[29] = 0;
   out_8440288889245546773[30] = 0;
   out_8440288889245546773[31] = 0;
   out_8440288889245546773[32] = 0;
   out_8440288889245546773[33] = 0;
   out_8440288889245546773[34] = 0;
   out_8440288889245546773[35] = 0;
   out_8440288889245546773[36] = 0;
   out_8440288889245546773[37] = 0;
   out_8440288889245546773[38] = 0;
   out_8440288889245546773[39] = 0;
   out_8440288889245546773[40] = 0;
   out_8440288889245546773[41] = 0;
   out_8440288889245546773[42] = 0;
   out_8440288889245546773[43] = 0;
   out_8440288889245546773[44] = 0;
   out_8440288889245546773[45] = 0;
   out_8440288889245546773[46] = 0;
   out_8440288889245546773[47] = 0;
   out_8440288889245546773[48] = 0;
   out_8440288889245546773[49] = 1;
   out_8440288889245546773[50] = 0;
   out_8440288889245546773[51] = 0;
   out_8440288889245546773[52] = 0;
   out_8440288889245546773[53] = 0;
   out_8440288889245546773[54] = 0;
   out_8440288889245546773[55] = 0;
   out_8440288889245546773[56] = 0;
   out_8440288889245546773[57] = 0;
   out_8440288889245546773[58] = 0;
   out_8440288889245546773[59] = 0;
   out_8440288889245546773[60] = 0;
   out_8440288889245546773[61] = 0;
   out_8440288889245546773[62] = 0;
   out_8440288889245546773[63] = 0;
   out_8440288889245546773[64] = 0;
   out_8440288889245546773[65] = 0;
   out_8440288889245546773[66] = 0;
   out_8440288889245546773[67] = 0;
   out_8440288889245546773[68] = 0;
   out_8440288889245546773[69] = 0;
   out_8440288889245546773[70] = 0;
   out_8440288889245546773[71] = 0;
   out_8440288889245546773[72] = 1;
   out_8440288889245546773[73] = 0;
   out_8440288889245546773[74] = 0;
   out_8440288889245546773[75] = 0;
   out_8440288889245546773[76] = 0;
   out_8440288889245546773[77] = 0;
   out_8440288889245546773[78] = 0;
   out_8440288889245546773[79] = 0;
   out_8440288889245546773[80] = 0;
   out_8440288889245546773[81] = 0;
   out_8440288889245546773[82] = 0;
   out_8440288889245546773[83] = 0;
   out_8440288889245546773[84] = 0;
   out_8440288889245546773[85] = 0;
   out_8440288889245546773[86] = 0;
   out_8440288889245546773[87] = 0;
}
void h_13(double *state, double *unused, double *out_7772958891132362007) {
   out_7772958891132362007[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7772958891132362007[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7772958891132362007[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6618699489849958875) {
   out_6618699489849958875[0] = 0;
   out_6618699489849958875[1] = 0;
   out_6618699489849958875[2] = 0;
   out_6618699489849958875[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6618699489849958875[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6618699489849958875[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6618699489849958875[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6618699489849958875[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6618699489849958875[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6618699489849958875[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6618699489849958875[10] = 0;
   out_6618699489849958875[11] = 0;
   out_6618699489849958875[12] = 0;
   out_6618699489849958875[13] = 0;
   out_6618699489849958875[14] = 0;
   out_6618699489849958875[15] = 0;
   out_6618699489849958875[16] = 0;
   out_6618699489849958875[17] = 0;
   out_6618699489849958875[18] = 0;
   out_6618699489849958875[19] = 0;
   out_6618699489849958875[20] = 0;
   out_6618699489849958875[21] = 0;
   out_6618699489849958875[22] = 0;
   out_6618699489849958875[23] = 0;
   out_6618699489849958875[24] = 0;
   out_6618699489849958875[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6618699489849958875[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6618699489849958875[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6618699489849958875[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6618699489849958875[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6618699489849958875[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6618699489849958875[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6618699489849958875[32] = 0;
   out_6618699489849958875[33] = 0;
   out_6618699489849958875[34] = 0;
   out_6618699489849958875[35] = 0;
   out_6618699489849958875[36] = 0;
   out_6618699489849958875[37] = 0;
   out_6618699489849958875[38] = 0;
   out_6618699489849958875[39] = 0;
   out_6618699489849958875[40] = 0;
   out_6618699489849958875[41] = 0;
   out_6618699489849958875[42] = 0;
   out_6618699489849958875[43] = 0;
   out_6618699489849958875[44] = 0;
   out_6618699489849958875[45] = 0;
   out_6618699489849958875[46] = 0;
   out_6618699489849958875[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6618699489849958875[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6618699489849958875[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6618699489849958875[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6618699489849958875[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6618699489849958875[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6618699489849958875[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6618699489849958875[54] = 0;
   out_6618699489849958875[55] = 0;
   out_6618699489849958875[56] = 0;
   out_6618699489849958875[57] = 0;
   out_6618699489849958875[58] = 0;
   out_6618699489849958875[59] = 0;
   out_6618699489849958875[60] = 0;
   out_6618699489849958875[61] = 0;
   out_6618699489849958875[62] = 0;
   out_6618699489849958875[63] = 0;
   out_6618699489849958875[64] = 0;
   out_6618699489849958875[65] = 0;
}
void h_14(double *state, double *unused, double *out_2065860645518724890) {
   out_2065860645518724890[0] = state[10];
   out_2065860645518724890[1] = state[11];
   out_2065860645518724890[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1079678401513375554) {
   out_1079678401513375554[0] = 0;
   out_1079678401513375554[1] = 0;
   out_1079678401513375554[2] = 0;
   out_1079678401513375554[3] = 0;
   out_1079678401513375554[4] = 0;
   out_1079678401513375554[5] = 0;
   out_1079678401513375554[6] = 0;
   out_1079678401513375554[7] = 0;
   out_1079678401513375554[8] = 0;
   out_1079678401513375554[9] = 0;
   out_1079678401513375554[10] = 1;
   out_1079678401513375554[11] = 0;
   out_1079678401513375554[12] = 0;
   out_1079678401513375554[13] = 0;
   out_1079678401513375554[14] = 0;
   out_1079678401513375554[15] = 0;
   out_1079678401513375554[16] = 0;
   out_1079678401513375554[17] = 0;
   out_1079678401513375554[18] = 0;
   out_1079678401513375554[19] = 0;
   out_1079678401513375554[20] = 0;
   out_1079678401513375554[21] = 0;
   out_1079678401513375554[22] = 0;
   out_1079678401513375554[23] = 0;
   out_1079678401513375554[24] = 0;
   out_1079678401513375554[25] = 0;
   out_1079678401513375554[26] = 0;
   out_1079678401513375554[27] = 0;
   out_1079678401513375554[28] = 0;
   out_1079678401513375554[29] = 0;
   out_1079678401513375554[30] = 0;
   out_1079678401513375554[31] = 0;
   out_1079678401513375554[32] = 0;
   out_1079678401513375554[33] = 1;
   out_1079678401513375554[34] = 0;
   out_1079678401513375554[35] = 0;
   out_1079678401513375554[36] = 0;
   out_1079678401513375554[37] = 0;
   out_1079678401513375554[38] = 0;
   out_1079678401513375554[39] = 0;
   out_1079678401513375554[40] = 0;
   out_1079678401513375554[41] = 0;
   out_1079678401513375554[42] = 0;
   out_1079678401513375554[43] = 0;
   out_1079678401513375554[44] = 0;
   out_1079678401513375554[45] = 0;
   out_1079678401513375554[46] = 0;
   out_1079678401513375554[47] = 0;
   out_1079678401513375554[48] = 0;
   out_1079678401513375554[49] = 0;
   out_1079678401513375554[50] = 0;
   out_1079678401513375554[51] = 0;
   out_1079678401513375554[52] = 0;
   out_1079678401513375554[53] = 0;
   out_1079678401513375554[54] = 0;
   out_1079678401513375554[55] = 0;
   out_1079678401513375554[56] = 1;
   out_1079678401513375554[57] = 0;
   out_1079678401513375554[58] = 0;
   out_1079678401513375554[59] = 0;
   out_1079678401513375554[60] = 0;
   out_1079678401513375554[61] = 0;
   out_1079678401513375554[62] = 0;
   out_1079678401513375554[63] = 0;
   out_1079678401513375554[64] = 0;
   out_1079678401513375554[65] = 0;
}
void h_33(double *state, double *unused, double *out_6155803893915517555) {
   out_6155803893915517555[0] = state[16];
   out_6155803893915517555[1] = state[17];
   out_6155803893915517555[2] = state[18];
}
void H_33(double *state, double *unused, double *out_309678528260393064) {
   out_309678528260393064[0] = 0;
   out_309678528260393064[1] = 0;
   out_309678528260393064[2] = 0;
   out_309678528260393064[3] = 0;
   out_309678528260393064[4] = 0;
   out_309678528260393064[5] = 0;
   out_309678528260393064[6] = 0;
   out_309678528260393064[7] = 0;
   out_309678528260393064[8] = 0;
   out_309678528260393064[9] = 0;
   out_309678528260393064[10] = 0;
   out_309678528260393064[11] = 0;
   out_309678528260393064[12] = 0;
   out_309678528260393064[13] = 0;
   out_309678528260393064[14] = 0;
   out_309678528260393064[15] = 0;
   out_309678528260393064[16] = 1;
   out_309678528260393064[17] = 0;
   out_309678528260393064[18] = 0;
   out_309678528260393064[19] = 0;
   out_309678528260393064[20] = 0;
   out_309678528260393064[21] = 0;
   out_309678528260393064[22] = 0;
   out_309678528260393064[23] = 0;
   out_309678528260393064[24] = 0;
   out_309678528260393064[25] = 0;
   out_309678528260393064[26] = 0;
   out_309678528260393064[27] = 0;
   out_309678528260393064[28] = 0;
   out_309678528260393064[29] = 0;
   out_309678528260393064[30] = 0;
   out_309678528260393064[31] = 0;
   out_309678528260393064[32] = 0;
   out_309678528260393064[33] = 0;
   out_309678528260393064[34] = 0;
   out_309678528260393064[35] = 0;
   out_309678528260393064[36] = 0;
   out_309678528260393064[37] = 0;
   out_309678528260393064[38] = 0;
   out_309678528260393064[39] = 1;
   out_309678528260393064[40] = 0;
   out_309678528260393064[41] = 0;
   out_309678528260393064[42] = 0;
   out_309678528260393064[43] = 0;
   out_309678528260393064[44] = 0;
   out_309678528260393064[45] = 0;
   out_309678528260393064[46] = 0;
   out_309678528260393064[47] = 0;
   out_309678528260393064[48] = 0;
   out_309678528260393064[49] = 0;
   out_309678528260393064[50] = 0;
   out_309678528260393064[51] = 0;
   out_309678528260393064[52] = 0;
   out_309678528260393064[53] = 0;
   out_309678528260393064[54] = 0;
   out_309678528260393064[55] = 0;
   out_309678528260393064[56] = 0;
   out_309678528260393064[57] = 0;
   out_309678528260393064[58] = 0;
   out_309678528260393064[59] = 0;
   out_309678528260393064[60] = 0;
   out_309678528260393064[61] = 0;
   out_309678528260393064[62] = 1;
   out_309678528260393064[63] = 0;
   out_309678528260393064[64] = 0;
   out_309678528260393064[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7641177276838842515) {
  H(in_vec, out_7641177276838842515);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2532183155020331779) {
  err_fun(nom_x, delta_x, out_2532183155020331779);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4705040342203024337) {
  inv_err_fun(nom_x, true_x, out_4705040342203024337);
}
void live_H_mod_fun(double *state, double *out_5358584358519148047) {
  H_mod_fun(state, out_5358584358519148047);
}
void live_f_fun(double *state, double dt, double *out_2483488690285755121) {
  f_fun(state,  dt, out_2483488690285755121);
}
void live_F_fun(double *state, double dt, double *out_6736351039582247501) {
  F_fun(state,  dt, out_6736351039582247501);
}
void live_h_4(double *state, double *unused, double *out_2376661880563825318) {
  h_4(state, unused, out_2376661880563825318);
}
void live_H_4(double *state, double *unused, double *out_6207540533751071916) {
  H_4(state, unused, out_6207540533751071916);
}
void live_h_9(double *state, double *unused, double *out_2065860645518724890) {
  h_9(state, unused, out_2065860645518724890);
}
void live_H_9(double *state, double *unused, double *out_1079678401513375554) {
  H_9(state, unused, out_1079678401513375554);
}
void live_h_10(double *state, double *unused, double *out_6788541366407009480) {
  h_10(state, unused, out_6788541366407009480);
}
void live_H_10(double *state, double *unused, double *out_4717283011623182729) {
  H_10(state, unused, out_4717283011623182729);
}
void live_h_12(double *state, double *unused, double *out_2109637504871451338) {
  h_12(state, unused, out_2109637504871451338);
}
void live_H_12(double *state, double *unused, double *out_1188084125719110121) {
  H_12(state, unused, out_1188084125719110121);
}
void live_h_35(double *state, double *unused, double *out_5362197287562187074) {
  h_35(state, unused, out_5362197287562187074);
}
void live_H_35(double *state, double *unused, double *out_2840878476378464540) {
  H_35(state, unused, out_2840878476378464540);
}
void live_h_32(double *state, double *unused, double *out_3168274671828253638) {
  h_32(state, unused, out_3168274671828253638);
}
void live_H_32(double *state, double *unused, double *out_8440288889245546773) {
  H_32(state, unused, out_8440288889245546773);
}
void live_h_13(double *state, double *unused, double *out_7772958891132362007) {
  h_13(state, unused, out_7772958891132362007);
}
void live_H_13(double *state, double *unused, double *out_6618699489849958875) {
  H_13(state, unused, out_6618699489849958875);
}
void live_h_14(double *state, double *unused, double *out_2065860645518724890) {
  h_14(state, unused, out_2065860645518724890);
}
void live_H_14(double *state, double *unused, double *out_1079678401513375554) {
  H_14(state, unused, out_1079678401513375554);
}
void live_h_33(double *state, double *unused, double *out_6155803893915517555) {
  h_33(state, unused, out_6155803893915517555);
}
void live_H_33(double *state, double *unused, double *out_309678528260393064) {
  H_33(state, unused, out_309678528260393064);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
